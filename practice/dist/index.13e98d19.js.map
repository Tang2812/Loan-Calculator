{"mappings":"AAAA,MAAM,gBAAgB;IAEpB,MAAM;QACJ,IAAI,CAAC,qBAAqB;IAC5B;IAEA,6BAA6B;IAC7B,uBAAuB;QACrB,MAAM,gBAAgB,SAAS,aAAa,CAAC;QAC7C,MAAM,aAAa,SAAS,aAAa,CAAC;QAC1C,MAAM,WAAW,SAAS,aAAa,CAAC;QACxC,MAAM,eAAe,SAAS,aAAa,CAAC;QAC5C,MAAM,mBAAmB,SAAS,aAAa,CAAC;QAChD,MAAM,YAAY,SAAS,gBAAgB,CAAC;QAC5C,MAAM,SAAS,SAAS,aAAa,CAAC;QAEtC,SAAS;YACP,MAAM,uBAAuB,OAAO,cAAc,KAAK,CAAC,OAAO,CAAC,MAAM;YACtE,MAAM,oBAAoB,OAAO,WAAW,KAAK,CAAC,OAAO,CAAC,MAAM;YAChE,MAAM,kBAAkB,OAAO,SAAS,KAAK;YAC7C,MAAM,sBAAsB,OAAO,aAAa,KAAK;YACrD,MAAM,0BAA0B,iBAAiB,KAAK;YACtD,MAAM,qBAAqB,SAAS,aAAa,CAAC;YAClD,MAAM,kBAAkB,SAAS,aAAa,CAAC;YAC/C,MAAM,gBAAgB,SAAS,aAAa,CAAC;YAC7C,MAAM,oBAAoB,SAAS,aAAa,CAAC;YACjD,MAAM,wBAAwB,SAAS,aAAa,CAAC;YAErD,kBAAkB;YAClB,MAAM,oBAAoB,oBAAoB,aAAa,CAAC,sBAAsB,mBAAmB,iBAAiB,qBAAqB;YAE3I,IAAI,kBAAkB,WAAW,KAAK,MAAM;gBAE1C,6BAA6B;gBAC7B,mBAAmB,WAAW,GAAG,kBAAkB,aAAa,CAAC,EAAE;gBACnE,gBAAgB,WAAW,GAAG,kBAAkB,aAAa,CAAC,EAAE;gBAChE,cAAc,WAAW,GAAG,kBAAkB,aAAa,CAAC,EAAE;gBAC9D,kBAAkB,WAAW,GAAG,kBAAkB,aAAa,CAAC,EAAE;gBAClE,sBAAsB,WAAW,GAAG,kBAAkB,aAAa,CAAC,EAAE;gBAGtE,oBAAoB,eAAe,CAAC,sBAAsB,mBAAmB,iBAAiB,qBAAqB;YACrH,OAAO;gBAEL,6BAA6B;gBAC7B,mBAAmB,WAAW,GAAG,kBAAkB,aAAa,CAAC,EAAE;gBACnE,gBAAgB,WAAW,GAAG,kBAAkB,aAAa,CAAC,EAAE;gBAChE,cAAc,WAAW,GAAG,kBAAkB,aAAa,CAAC,EAAE;gBAC9D,kBAAkB,WAAW,GAAG,kBAAkB,aAAa,CAAC,EAAE;gBAClE,sBAAsB,WAAW,GAAG,kBAAkB,aAAa,CAAC,EAAE;YAExE;QACF;QAEA,yCAAyC;QACzC,UAAU,OAAO,CAAC,CAAA;YAChB,MAAM,gBAAgB,CAAC,SAAS;gBAC9B;YACF;QACF;QAEA,oCAAoC;QACpC,OAAO,gBAAgB,CAAC,SAAS;YAC/B;QACF;QAEA,kCAAkC;QAClC,EAAE,eAAe,EAAE,CAAC,UAAU;YAE5B;QACF;IACF;IAEA,4BAA4B;IAC5B,uBAAuB,SAAU,kBAAkB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,aAAa,EAAE,WAAW,EAAE,MAAM;QAC3H,MAAM,yBAAyB,SAAS,aAAa,CAAC;QACtD,MAAM,wBAAwB,SAAS,aAAa,CAAC;QACrD,MAAM,wBAAwB,SAAS,aAAa,CAAC;QACrD,MAAM,kBAAkB,SAAS,aAAa,CAAC;QAC/C,MAAM,oBAAoB,SAAS,aAAa,CAAC;QACjD,MAAM,mBAAmB,SAAS,aAAa,CAAC;QAEhD,4BAA4B;QAC5B,kBAAkB,WAAW,GAAG,GAAG,eAAe;QAClD,iBAAiB,WAAW,GAAG,GAAG,oBAAoB;QACtD,gBAAgB,WAAW,GAAG,GAAG,aAAa;QAC9C,uBAAuB,WAAW,GAAG,GAAG,mBAAmB,IAAI,CAAC;QAChE,sBAAsB,WAAW,GAAG,GAAG,kBAAkB,IAAI,CAAC;QAC9D,sBAAsB,WAAW,GAAG,GAAG,kBAAkB,IAAI,CAAC;QAE9D,qBAAqB;QACrB,IAAI,CAAC,eAAe,CAAC;IACvB;IAEA,qBAAqB;IACrB,iBAAiB;IACjB,iBAAiB,SAAU,MAAM;QAC/B,MAAM,aAAa,SAAS,aAAa,CAAC,uBAAuB,oBAAoB,CAAC,QAAQ,CAAC,EAAE;QACjG,MAAM,SAAS,SAAS,aAAa,CAAC;QACtC,IAAI,SAAS;QAEb,0BAA0B;QAC1B,WAAW,SAAS,GAAG;QAEvB,OAAO,OAAO,CAAC,CAAA;YACb,MAAM,MAAM,WAAW,SAAS;YAChC,MAAM,gBAAgB,IAAI,UAAU,CAAC;YACrC,MAAM,kBAAkB,IAAI,UAAU,CAAC;YACvC,MAAM,0BAA0B,IAAI,UAAU,CAAC;YAC/C,MAAM,SAAS,IAAI,UAAU,CAAC;YAC9B,MAAM,WAAW,IAAI,UAAU,CAAC;YAChC,MAAM,QAAQ,IAAI,UAAU,CAAC;YAE7B,SAAS,SAAS;YAClB,cAAc,WAAW,GAAG;YAC5B,gBAAgB,WAAW,GAAG,KAAK,eAAe;YAClD,CAAC,MAAM,KAAK,wBAAwB,IAAI,wBAAwB,WAAW,GAAG,KAAK,wBAAwB,GAAG,wBAAwB,WAAW,GAAG;YACpJ,CAAC,MAAM,KAAK,MAAM,IAAI,OAAO,WAAW,GAAG,oBAAoB,UAAU,CAAC,KAAK,MAAM,IAAI,OAAO,WAAW,GAAG;YAC9G,CAAC,MAAM,KAAK,QAAQ,IAAI,SAAS,WAAW,GAAG,oBAAoB,UAAU,CAAC,KAAK,QAAQ,IAAI,SAAS,WAAW,GAAG;YACtH,CAAC,MAAM,KAAK,yBAAyB,IAAI,MAAM,WAAW,GAAG,oBAAoB,UAAU,CAAC,KAAK,yBAAyB,IAAI,MAAM,WAAW,GAAG;YAIlJ,oBAAoB;YACpB,cAAc,SAAS,CAAC,GAAG,CAAC;YAC5B,gBAAgB,SAAS,CAAC,GAAG,CAAC;YAC9B,wBAAwB,SAAS,CAAC,GAAG,CAAC;YACtC,OAAO,SAAS,CAAC,GAAG,CAAC;YACrB,SAAS,SAAS,CAAC,GAAG,CAAC;YACvB,MAAM,SAAS,CAAC,GAAG,CAAC;QAEtB;QAEA,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACzB,yBAAyB;YACzB,OAAO,gBAAgB,CAAC,SAAS;gBAC/B,oBAAoB,YAAY;YAClC;YACA,IAAI,CAAC,eAAe,GAAG;QACzB;IACF;AAEF","sources":["src/js/views/FormInputView.js"],"sourcesContent":["const FormInputView = {\r\n\r\n  init: function () {\r\n    this.getValueWhenUserInput();\r\n  },\r\n\r\n  // get element when user iput\r\n  getValueWhenUserInput: function () {\r\n    const propertyValue = document.querySelector('#property-value');\r\n    const loanAmount = document.querySelector('#loan-amount');\r\n    const loanTerm = document.querySelector('#loan-term');\r\n    const interestRate = document.querySelector('#interest-rate');\r\n    const disbursementDate = document.querySelector('#datepicker');\r\n    const inputBoxs = document.querySelectorAll('.input-box');\r\n    const slider = document.querySelector('#slider');\r\n\r\n    function getValue() {\r\n      const valueOfPropertyValue = Number(propertyValue.value.replace(/,/g, ''));\r\n      const valueOfLoanAmount = Number(loanAmount.value.replace(/,/g, ''));\r\n      const valueOfLoanTerm = Number(loanTerm.value);\r\n      const valueOfInterestRate = Number(interestRate.value);\r\n      const valueOfDisbursementDate = disbursementDate.value;\r\n      const propertyValueError = document.querySelector('#property-error');\r\n      const loanAmountError = document.querySelector('#loan-amount-error');\r\n      const loanTermError = document.querySelector('#loan-term-error');\r\n      const interestRateError = document.querySelector('#interest-rate-error');\r\n      const disbursementDateError = document.querySelector('#date-time-error');\r\n\r\n      //  validate input\r\n      const errorsAndMessages = FormInputController.validateValue(valueOfPropertyValue, valueOfLoanAmount, valueOfLoanTerm, valueOfInterestRate, valueOfDisbursementDate);\r\n\r\n      if (errorsAndMessages.inputStatus === true) {\r\n\r\n        // set message to error label\r\n        propertyValueError.textContent = errorsAndMessages.errorMessages[0];\r\n        loanAmountError.textContent = errorsAndMessages.errorMessages[1];\r\n        loanTermError.textContent = errorsAndMessages.errorMessages[2];\r\n        interestRateError.textContent = errorsAndMessages.errorMessages[3];\r\n        disbursementDateError.textContent = errorsAndMessages.errorMessages[4];\r\n\r\n\r\n        FormInputController.handleLoanValue(valueOfPropertyValue, valueOfLoanAmount, valueOfLoanTerm, valueOfInterestRate, valueOfDisbursementDate);\r\n      } else {\r\n\r\n        // set message to error label\r\n        propertyValueError.textContent = errorsAndMessages.errorMessages[0];\r\n        loanAmountError.textContent = errorsAndMessages.errorMessages[1];\r\n        loanTermError.textContent = errorsAndMessages.errorMessages[2];\r\n        interestRateError.textContent = errorsAndMessages.errorMessages[3];\r\n        disbursementDateError.textContent = errorsAndMessages.errorMessages[4];\r\n\r\n      }\r\n    };\r\n\r\n    // get value when user input to input box\r\n    inputBoxs.forEach(input => {\r\n      input.addEventListener('input', () => {\r\n        getValue();\r\n      })\r\n    });\r\n\r\n    // get value when user change slider\r\n    slider.addEventListener('input', () => {\r\n      getValue();\r\n    })\r\n\r\n    // get value when user choose date\r\n    $(\"#datepicker\").on(\"change\", () => {\r\n\r\n      getValue();\r\n    })\r\n  },\r\n\r\n  // set value of table result\r\n  setValueOfTableResult: function (totaInterestPayple, minMonthlyPayment, maxMonthlyPayment, totalInterest, totalOrigin, result) {\r\n    const totaInterestPaypleText = document.querySelector(\"#total-interest-payable\");\r\n    const minMonthlyPaymentText = document.querySelector(\"#monthly-payment-min-amount\");\r\n    const maxMonthlyPaymentText = document.querySelector(\"#monthly-payment-max-amount\");\r\n    const totalOriginText = document.querySelector('#total-origin');\r\n    const totalInterestText = document.querySelector('#total-interest');\r\n    const totalPaymentText = document.querySelector('#total-payment');\r\n\r\n    // set value to table result\r\n    totalInterestText.textContent = `${totalInterest}`;\r\n    totalPaymentText.textContent = `${totaInterestPayple}`;\r\n    totalOriginText.textContent = `${totalOrigin}`;\r\n    totaInterestPaypleText.textContent = `${totaInterestPayple} VND`;\r\n    minMonthlyPaymentText.textContent = `${minMonthlyPayment} VND`;\r\n    maxMonthlyPaymentText.textContent = `${maxMonthlyPayment} VND`;\r\n\r\n    // set value to modal\r\n    this.setValueOfModal(result);\r\n  },\r\n\r\n  // set value of modal\r\n  isEventAttached: false,\r\n  setValueOfModal: function (result) {\r\n    const modalTable = document.querySelector('#modal-table-result').getElementsByTagName('tbody')[0];\r\n    const button = document.querySelector(\"#export\");\r\n    let number = 0;\r\n\r\n    // clear conttent of modal\r\n    modalTable.innerHTML = '';\r\n\r\n    result.forEach(item => {\r\n      const row = modalTable.insertRow();\r\n      const ordinalNumber = row.insertCell(0);\r\n      const repaymentPeriod = row.insertCell(1);\r\n      const remainingOriginalAmount = row.insertCell(2);\r\n      const origin = row.insertCell(3);\r\n      const interest = row.insertCell(4);\r\n      const total = row.insertCell(5);\r\n\r\n      number = number + 1;\r\n      ordinalNumber.textContent = number;\r\n      repaymentPeriod.textContent = item.repaymentPeriod;\r\n      !isNaN(item.remainningOriginalAmount) ? remainingOriginalAmount.textContent = item.remainningOriginalAmount : remainingOriginalAmount.textContent = '0';\r\n      !isNaN(item.origin) ? origin.textContent = FormInputController.reformater(item.origin) : origin.textContent = '0';\r\n      !isNaN(item.interest) ? interest.textContent = FormInputController.reformater(item.interest) : interest.textContent = '0';\r\n      !isNaN(item.toralPrincipalAndInterest) ? total.textContent = FormInputController.reformater(item.toralPrincipalAndInterest) : total.textContent = '0';\r\n\r\n\r\n\r\n      // add css to record\r\n      ordinalNumber.classList.add('content__result');\r\n      repaymentPeriod.classList.add('content__result');\r\n      remainingOriginalAmount.classList.add('content__result');\r\n      origin.classList.add('content__result');\r\n      interest.classList.add('content__result');\r\n      total.classList.add('content__result');\r\n\r\n    })\r\n\r\n    if (!this.isEventAttached) {\r\n      // listen event of button\r\n      button.addEventListener('click', function () {\r\n        FormInputController.exportToXLSX();\r\n      });\r\n      this.isEventAttached = true;\r\n    }\r\n  },\r\n\r\n}\r\n"],"names":[],"version":3,"file":"index.13e98d19.js.map","sourceRoot":"/__parcel_source_root/"}